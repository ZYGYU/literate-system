name: Spotify to Telegram

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

jobs:
  sync-music:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Packages
        run: |
          sudo apt-get install -y wget curl
          sudo -v ; curl https://rclone.org/install.sh | sudo bash -s beta
          pip install spotdl
          spotdl --download-ffmpeg

      - name: Load Rclone Config from Secret
        run: |
          echo "$RCLONE_CONF_BASE64" | base64 --decode > rclone.conf
        env:
          RCLONE_CONF_BASE64: ${{ secrets.RCLONE_CONF_BASE64 }}

      - name: Load Cookies File from Secret
        run: |
          echo "$COOKIES_TXT_BASE64" | base64 --decode > cookies.txt
        env:
          COOKIES_TXT_BASE64: ${{ secrets.COOKIES_TXT_BASE64 }}

      - name: Download Spotify Playlist
        run: |
          MUSIC_DIR="$HOME/music"
          SPOTIFY_PLAYLIST_URL="https://open.spotify.com/playlist/21yqmD9oVk0ah2n6Lob2zu"
          mkdir -p "$MUSIC_DIR"

          spotdl download "$SPOTIFY_PLAYLIST_URL" \
            --cookie-file cookies.txt \
            --output "$MUSIC_DIR/{artists} - {title}.{output-ext}"

      - name: Upload Music to Telegram by File Name with Delay
        run: |
          # Variables
          MUSIC_DIR="$HOME/music"
          ARCHIVE_FILE="$HOME/archived.txt"
          TELEGRAM_BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}"
          TELEGRAM_CHAT_ID="${{ secrets.TELEGRAM_CHAT_ID }}"

          # Prepare archive file
          if [ ! -f "$ARCHIVE_FILE" ]; then
              touch "$ARCHIVE_FILE"
          fi

          # Check and upload each file
          for file in "$MUSIC_DIR"/*; do
              if [ -f "$file" ]; then
                  BASENAME=$(basename "$file")

                  # Check if file is already archived
                  if grep -Fxq "$BASENAME" "$ARCHIVE_FILE"; then
                      echo "File $BASENAME already uploaded, skipping."
                  else
                      echo "Uploading $BASENAME to Telegram..."
                      sudo curl -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendAudio" \
                        -F "chat_id=$TELEGRAM_CHAT_ID" \
                        -F "audio=@$file"
                      
                      if [ $? -eq 0 ]; then
                          echo "$BASENAME" >> "$ARCHIVE_FILE"
                          echo "Successfully uploaded $BASENAME."
                      else
                          echo "Failed to upload $BASENAME."
                      fi

                      # Add delay before uploading the next file
                      echo "Waiting for 2 seconds before the next upload..."
                      sleep 2
                  fi
              else
                  echo "Invalid file: $file"
              fi
          done

      - name: Commit Archived File
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add archived.txt
          git commit -m "Update archived.txt with uploaded files"
          git push
